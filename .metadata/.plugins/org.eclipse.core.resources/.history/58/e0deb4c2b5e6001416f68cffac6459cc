package pathfinding.test;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import pathfinding.Astar;
import pathfinding.Node;

public class TestAStar {
	public static final String WATER = "~";
	public static final String START = "@";
	public static final String FLADlANDS = ".";
	public static final String END = "X";
	public static final String FOREST = "*";
	public static final String MOUNTAIN = "^";
	
	
  final static String FILE_NAME = "C:\\multichoice\\input.txt";
  final static String OUTPUT_FILE_NAME = "C:\\multichoice\\large_map.txt";
	
	public static void main(String[] args) {
		
		try {
			File file = new File(FILE_NAME);
			FileReader fileReader = new FileReader(file);
			BufferedReader bufferedReader = new BufferedReader(fileReader);
			StringBuffer stringBuffer = new StringBuffer();
			String line;
			while ((line = bufferedReader.readLine()) != null) {
				stringBuffer.append(line.charAt(0));
				stringBuffer.append("\n");
				
				List list = new ArrayList();
				list.add(stringBuffer);
				
			}
			fileReader.close();
			
			Node startNode = new Node(0,0);
			Node endNode = new Node(4,4);
			
			Astar astar = new Astar();
			//astar.findShortestPath(startNode, endNode);

			
		
		   FileWriter fileWriter = new FileWriter(OUTPUT_FILE_NAME);
		   BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
		   bufferedWriter.write(stringBuffer.toString() + "YES");
		     
		   bufferedWriter.close();
		   fileWriter.close();

		} catch (IOException e) {
			e.printStackTrace();
		}

   }
	
	private static void addToCost(Node endNode) {
		// TODO Auto-generated method stub
		
	}

	private static void addNode(String type, Node node){

	}

}
